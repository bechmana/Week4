// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitCatBechmanaAssignment.Data;

#nullable disable

namespace RecruitCatBechmanaAssignment.Migrations
{
    [DbContext(typeof(RecruitCatBechmanaAssignmentContext))]
    partial class RecruitCatBechmanaAssignmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"), 1L, 1);

                    b.Property<int>("CompAssociatedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hired")
                        .HasColumnType("bit");

                    b.Property<int>("IndAssociatedId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OptionalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TitleAssociatedId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("CompAssociatedId");

                    b.HasIndex("IndAssociatedId");

                    b.HasIndex("TitleAssociatedId");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndAssociatedId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OptStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PositionFilled")
                        .HasColumnType("bit");

                    b.Property<string>("PostionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("IndAssociatedId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Industry", b =>
                {
                    b.Property<int>("IndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndustryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IndustryId");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedianSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Candidate", b =>
                {
                    b.HasOne("RecruitCatBechmanaAssignment.Models.Company", "CompAssociated")
                        .WithMany("Candidates")
                        .HasForeignKey("CompAssociatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitCatBechmanaAssignment.Models.Industry", "IndAssociated")
                        .WithMany("Candidates")
                        .HasForeignKey("IndAssociatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitCatBechmanaAssignment.Models.Title", "TitleAssociated")
                        .WithMany("Candidates")
                        .HasForeignKey("TitleAssociatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompAssociated");

                    b.Navigation("IndAssociated");

                    b.Navigation("TitleAssociated");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Company", b =>
                {
                    b.HasOne("RecruitCatBechmanaAssignment.Models.Industry", "IndAssociated")
                        .WithMany("Companies")
                        .HasForeignKey("IndAssociatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndAssociated");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Company", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Industry", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("RecruitCatBechmanaAssignment.Models.Title", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
